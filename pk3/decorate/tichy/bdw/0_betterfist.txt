

actor " B-Fists ": DoomWeapon
{
    Weapon.SelectionOrder 3700
    +WEAPON.MELEEWEAPON
    +NOALERT
    +NOAUTOFIRE

    Weapon.SisterWeapon " Power B-Fists "

    Inventory.PickupMessage "$BDW_PK_FISTS"
    Obituary "$BDW_MP_FISTS"

    States
    {
      Select:
        RPUN A 0 A_TakeInventory("PunchIndicator")
        RPUN A 1 A_Raise
        loop

      Ready:
        RPUN A 0 A_JumpIfInventory("PunchIndicator", 1, "LeftReady")
        goto RightReady

      LeftReady:
        LPUN A 1 A_WeaponReady
        loop

      RightReady:
        RPUN A 1 A_WeaponReady
        loop

      Deselect:
        RPUN A 1 A_JumpIfInventory("PunchIndicator", 1, "LeftDeselect")
        goto RightDeselect

      LeftDeselect:
        LPUN A 1 A_Lower
        loop

      RightDeselect:
        RPUN A 1 A_Lower
        loop

      Fire:
        LPUN A 0 A_JumpIfInventory("PowerBerserkStrength", 1, "BerserkFire")
        LPUN A 0 A_JumpIfInventory("PunchIndicator",  1, "RightJab")
        goto LeftJab

      LeftJab:
        LPUN A 0 A_GiveInventory("PunchIndicator")
        LPUN B 1
        LPUN C 3
        LPUN D 3 A_CustomPunch(2*random(1,10), 1, 0, "FistPunchPuff")
        LPUN EFG 1
        LPUN B 0 A_Jump(12, "ZerkCheck")
        LPUN B 0 A_TakeInventory("TargetHit")
        LPUN B 0 A_ReFire
        goto Ready

      RightJab:
        RPUN A 0 A_TakeInventory("PunchIndicator")
        RPUN B 1
        RPUN C 3
        RPUN D 3 A_CustomPunch(2*random(1,10), 1, 0, "FistPunchPuff")
        RPUN EFG 1
        RPUN B 0 A_Jump(12, "ZerkCheck")
        RPUN B 0 A_TakeInventory("TargetHit")
        RPUN B 0 A_ReFire
        goto Ready



      BerserkFire:
        LPUN A 0 A_JumpIfInventory("PunchIndicator", 1, "BerserkRightJab")
        goto BerserkLeftJab

      BerserkLeftJab:
        LPUN A 0 A_GiveInventory("PunchIndicator")
        LPUN B 1
        LPUN C 3
        LPUN D 3 A_CustomPunch(8*random(1,10), 1, 0, "BerserkPunchPuff")
        LPUN EFG 1
        LPUN B 0 A_Jump(24, "ZerkCheck")
        LPUN B 0 A_TakeInventory("TargetHit")
        LPUN B 0 A_ReFire
        goto Ready

      BerserkRightJab:
        RPUN A 0 A_TakeInventory("PunchIndicator")
        RPUN B 1
        RPUN C 3
        RPUN D 3 A_CustomPunch(8*random(1,10), 1, 0, "BerserkPunchPuff")
        RPUN EFG 1
        RPUN B 0 A_Jump(24, "ZerkCheck")
        RPUN B 0 A_TakeInventory("TargetHit")
        RPUN B 0 A_ReFire
        goto Ready

      AltFire:
        RPUN A 0 A_JumpIfInventory("PunchIndicator", 1, "LeftAlt")
        goto RightAlt

      LeftAlt:
        LPUN A 0 A_TakeInventory("PunchIndicator")
        goto Ready

      RightAlt:
        RPUN A 0 A_GiveInventory("PunchIndicator")
        goto Ready

      ZerkCheck:
        RPUN A 0 A_JumpIfInventory("TargetHit", 1, "RAAAAAGE")
        RPUN A 0 A_TakeInventory("TargetHit")
        RPUN A 0 A_ReFire
        goto Ready

      RAAAAAGE:
        RPUN A 0 ACS_ExecuteAlways(464, 0, 0, 0, 0)
        RPUN A 0 A_TakeInventory("TargetHit")
        RPUN A 0 A_ReFire
        goto Ready
    }
}


actor " Power B-Fists ": " B-Fists "
{
    Weapon.SisterWeapon " B-Fists "
    +POWERED_UP

    Obituary "$BDW_MP_FISTS_POWER"

    States
    {
      Fire:
        LPUN A 0 A_JumpIfInventory("PowerBerserkStrength", 1, "BerserkFire")
        LPUN A 0 A_JumpIfInventory("PunchIndicator",  1, "RightJab")
        goto LeftJab

      LeftJab:
        LPUN A 0 A_GiveInventory("PunchIndicator")
        LPUN B 1
        LPUN C 3
        LPUN D 3 A_CustomPunch(5*random(1,10), 1, 0, "FistPunchPuff")
        LPUN F 1
        LPUN B 0 A_Jump(24, "ZerkCheck")
        LPUN B 0 A_TakeInventory("TargetHit")
        LPUN B 0 A_ReFire
        goto Ready

      RightJab:
        RPUN A 0 A_TakeInventory("PunchIndicator")
        RPUN B 1
        RPUN C 3
        RPUN D 3 A_CustomPunch(5*random(1,10), 1, 0, "FistPunchPuff")
        RPUN F 1
        RPUN B 0 A_Jump(24, "ZerkCheck")
        RPUN B 0 A_TakeInventory("TargetHit")
        RPUN B 0 A_ReFire
        goto Ready



      BerserkFire:
        LPUN A 0 A_JumpIfInventory("PunchIndicator", 1, "BerserkRightJab")
        goto BerserkLeftJab

      BerserkLeftJab:
        LPUN A 0 A_GiveInventory("PunchIndicator")
        LPUN B 1
        LPUN C 2
        LPUN D 2 A_CustomPunch(20*random(1,10), 1, 0, "PowerBerserkPunchPuff")
        LPUN F 1
        LPUN B 0 A_Jump(48, "ZerkCheck")
        LPUN B 0 A_TakeInventory("TargetHit")
        LPUN B 0 A_ReFire
        goto Ready

      BerserkRightJab:
        RPUN A 0 A_TakeInventory("PunchIndicator")
        RPUN B 1
        RPUN C 2
        RPUN D 2 A_CustomPunch(20*random(1,10), 1, 0, "PowerBerserkPunchPuff")
        RPUN F 1
        RPUN B 0 A_Jump(48, "ZerkCheck")
        RPUN B 0 A_TakeInventory("TargetHit")
        RPUN B 0 A_ReFire
        goto Ready

      AltFire:
        RPUN A 0 A_JumpIfInventory("PunchIndicator", 1, "LeftAlt")
        goto RightAlt

      LeftAlt:
        LPUN A 0 A_TakeInventory("PunchIndicator")
        goto Ready

      RightAlt:
        RPUN A 0 A_GiveInventory("PunchIndicator")
        goto Ready

      ZerkCheck:
        RPUN A 0 A_JumpIfInventory("TargetHit", 1, "RAAAAAGE")
        RPUN A 0 A_TakeInventory("TargetHit")
        RPUN A 0 A_ReFire
        goto Ready

      RAAAAAGE:
        RPUN A 0 ACS_ExecuteAlways(464, 0, 0, 0, 0)
        RPUN A 0 A_TakeInventory("TargetHit")
        RPUN A 0 A_ReFire
        goto Ready
    }
}


actor PunchIndicator: Inventory { Inventory.MaxAmount 1 +UNDROPPABLE }

actor TargetHit: Inventory { Inventory.MaxAmount 1 +UNDROPPABLE }

actor FistPunchPuff: BulletPuff
{
    +PUFFGETSOWNER
    +PUFFONACTORS

    SeeSound "betterdoomweapons/punch"
    States
    {
      Spawn:
        TNT1 A 1
        TNT1 A 0 A_GiveToTarget("TargetHit")
        stop

      Melee:
        TNT1 A 1
        TNT1 A 0 A_GiveToTarget("TargetHit")
        stop

      Crash:
        goto Super::Spawn
    }
}

actor BerserkPunchPuff: BulletPuff
{
    +PUFFGETSOWNER
    +PUFFONACTORS

    SeeSound "betterdoomweapons/punch"
    States
    {
      Spawn:
        TNT1 A 1
        TNT1 A 0 A_GiveToTarget("TargetHit")
        TNT1 A 0 A_GiveToTarget("HealthBonus", random(1, 3))
        stop

      Melee:
        TNT1 A 1
        TNT1 A 0 A_GiveToTarget("TargetHit")
        TNT1 A 0 A_GiveToTarget("HealthBonus", random(1, 3))
        stop

      Crash:
        goto Super::Spawn
    }
}

actor PowerBerserkPunchPuff: BulletPuff
{
    +PUFFGETSOWNER
    +PUFFONACTORS

    SeeSound "betterdoomweapons/punch"
    States
    {
      Spawn:
        TNT1 A 1
        TNT1 A 0 A_GiveToTarget("TargetHit")
        TNT1 A 0 A_GiveToTarget("HealthBonus", random(4, 7))
        stop

      Melee:
        TNT1 A 1
        TNT1 A 0 A_GiveToTarget("TargetHit")
        TNT1 A 0 A_GiveToTarget("HealthBonus", random(4, 7))
        stop

      Crash:
        goto Super::Spawn
    }
}

actor PowerBerserkStrength: PowerProtection
{
    +INVENTORY.ADDITIVETIME
    Inventory.Amount 1
    Inventory.MaxAmount 1

    DamageFactor Normal, 0.125
    Powerup.Color 255,0,0,0.5
    Powerup.Duration 1400
}

actor PowerBerserkSpeed: PowerSpeed
{
    +INVENTORY.ADDITIVETIME
    Inventory.Amount 1
    Inventory.MaxAmount 1
    Speed 1.5

    Powerup.Duration 1400
}


ACTOR BerserkNew: CustomInventory replaces Berserk
{
    +COUNTITEM
    +INVENTORY.ALWAYSPICKUP
    Inventory.PickupMessage "You need to taste blood!"
    Inventory.PickupSound "misc/p_pkup"
    States
    {
      Spawn:
        PSTR A -1
        stop
      Pickup:
        TNT1 A 0 A_GiveInventory("PowerBerserkStrength")
        TNT1 A 0 A_GiveInventory("PowerBerserkSpeed")
        TNT1 A 0 HealThing(100, 0)
        TNT1 A 0 A_SelectWeapon("Fist")
        stop
    }
}
